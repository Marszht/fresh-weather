{"version":3,"sources":["pages/diary/index.js"],"names":["app","getApp","globalData","Page","data","avatarUrl","nickname","auth","daysStyle","todayEmotion","activeEmotion","emotion","colors","serene","hehe","ecstatic","sad","terrified","dateChange","e","detail","currentYear","currentMonth","setData","setCalendarColor","checkedColor","currentTarget","dataset","getScope","success","fail","name","wx","getSetting","res","authSetting","_getUserInfo","cb","getUserInfo","userInfo","_setDayData","year","month","styles","now","Date","today","console","log","forEach","v","ts","tsModified","date","day","getDate","push","color","background","lastMonth","slice","showPublish","getFullYear","getMonth","openid","then","r","catch","showToast","title","icon","duration","rs","nickName","that","getStorageSync","callback","length","getUserOpenId","result","login","code","session_key","setStorage","key","onLoad","curMonth","onShow","goBack","navigateBack","submmitEmotion","_id","onShareAppMessage","path"],"mappings":"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","file":"index.js","sourcesContent":["/*<remove trigger=\"prod\">*/\nimport { jscode2session } from '../../lib/api-mock'\nimport { getEmotionByOpenidAndDate, addEmotion } from '../../lib/api'\n/*</remove>*/\n/*<jdists trigger=\"prod\">\nimport {getEmotionByOpenidAndDate, addEmotion, jscode2session} from '../../lib/api'\n</jdists>*/\nimport { dateFormat } from '../../lib/utils'\nconst app = getApp()\nconst globalData = app.globalData;\nPage({\n  data: {\n    avatarUrl: globalData.avatarUrl,\n    nickname: globalData.nickname,\n    auth: -1,                       // 授权状态 \n    daysStyle: [],                 // 绑定日历日期颜色\n    todayEmotion: '',     \n    activeEmotion: 'serene',      // 选择今天的心情\n    // 定义好的数组，心情签到。\n    emotion: ['serene', 'hehe', 'ecstatic', 'sad', 'terrified'],\n    // 日历上签到显示的颜色\n    colors: {\n      serene: '#64d9fe',\n      hehe: '#d3fc1e',\n      ecstatic: '#f7dc0e',\n      sad: '#ec238a',\n      terrified: '#ee1aea'\n    }\n  },\n  // 不是当前月份的时候\n  dateChange(e) {\n    // console.log(e.detail)\n    let { currentYear, currentMonth } = e.detail\n    this.setData({\n      daysStyle: []\n    })\n    this.setCalendarColor(currentYear, currentMonth)\n  },\n  //  选择心情\n  checkedColor(e) {\n    let activeEmotion = e.currentTarget.dataset.emotion;\n    this.setData({\n      activeEmotion\n    })\n    // console.log('active', activeEmotion)\n  },\n  // 获取用户权限信息, 参数是可以临时加的？对的\n  getScope(success, fail, name = \"scope.userInfo\") {\n    wx.getSetting({\n      success: (res) => {\n        if (res.authSetting[name]) {\n          // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n          // 这里的success就是传过来的参数 this.getUserInfo\n          // 还得判断一下参数是否为function\n          typeof success === 'function' && success()\n        } else {\n          typeof fail === 'function' && fail()\n          // console.log('显示登录授权', this.data.auth)\n          // 显示登录授权\n        }\n      }\n    })\n  },\n  // 获取用户信息\n  // 每个小功能都封装成函数\n  _getUserInfo(cb = () => { }) {\n    wx.getUserInfo({\n      success: (res) => {\n        // console.log('info', res.userInfo)\n        cb(res.userInfo)\n      }\n    })\n  },\n  //  从数据库中选出当月的签到\n  _setDayData(data, year, month) {\n    const colors = this.data.colors;\n    const styles = [];\n    const now = new Date();\n    const today = dateFormat(now);\n    let todayEmotion = '';\n    console.log('setData', data)\n    data.forEach((v) => {\n      let ts = v.tsModified;\n      let date = new Date(ts);\n      let day = date.getDate();\n      if (today === dateFormat(date)) {\n        // console.log('dbaidb')\n        todayEmotion = v.emotion || ''\n      }\n      styles.push({\n        month: 'current',\n        day,\n        color: 'black',\n        background: colors[v.emotion]\n      })\n    })\n    // console.log(styles, today)\n    // console.log(`${year}-${('00' + month).slice(-2)}`)\n    this.setData({\n      lastMonth: `${year}-${('00' + month).slice(-2)}`,\n      showPublish: true,\n      todayEmotion,\n      daysStyle: styles\n    })\n  },\n  // 设置日历签到颜色\n  setCalendarColor(year, month) {\n    year = year || new Date().getFullYear();\n    month = month || new Date().getMonth() + 1;\n    getEmotionByOpenidAndDate(this.data.openid, year, month)\n      .then((r) => {\n        // console.log('签到数据', r.data)\n        const data = r.data || [];\n        console.log('calendar', data)\n        globalData[`diary-${year}-${month}`] = data;\n        this._setDayData(data, year, month);\n      })\n      .catch((e) => {\n        wx.showToast({\n          title: '加载已签到数据失败，请稍后再试',\n          icon: 'none',\n          duration: 3000\n        })\n      })\n  },\n  // 获取用户信息\n  getUserInfo() {  \n    //  如果用户不存在全局数据， 也就是globalData里面没有，就获取\n    if (!globalData.nickname || globalData.avatarUrl) {\n      // 这个函数不做数据的处理，\n      this._getUserInfo((rs) => {\n        this.setData({\n          nickname: rs.nickName,\n          avatarUrl: rs.avatarUrl\n        })\n        // 然后再存入全局\n        globalData.nickname = rs.nickName;\n        globalData.avatarUrl = rs.avatarUrl\n      })\n    }\n    const that = this;\n    let openid = wx.getStorageSync('openid');\n    // 逻辑数据的处理回调\n    function callback() {\n      that.setData({\n        auth: 1,\n        openid\n      })\n      const now = new Date()\n      const year = now.getFullYear()\n      const month = now.getMonth() + 1\n      //  最好赋默认值\n      const data = globalData[`diary-${year}-${month}`] || []\n      console.log('diary', data)\n      // console.log('callback', data)\n      // 所有的情况都会考虑\n      if (data && data.length) {\n        that._setDayData({data, year, month })\n      } else {\n        that.setCalendarColor()\n      }\n    }\n    // 如果之前存入了openid\n    if (openid) {\n      callback();\n    } else {\n      this.getUserOpenId(\n        // 成功的回调\n        (res) => {\n          openid = res.result.openid;\n          callback()\n        },\n        // 获取openid 失败的回调\n        () => {\n          this.setData({ auth: 0 })\n          console.log('授权失败')\n        }\n      )\n    }\n  },\n  // 获取用户的 oppenid 以及 session_key\n  getUserOpenId(success, fail) {\n    wx.login({\n      success: (res) => {\n        // console.log('code', res.code)\n        // 传临时登陆凭证code\n        jscode2session(res.code).then((res) => {\n          let { openid = '', session_key = '' } = res.result || {};\n          if (openid && session_key) {\n            wx.setStorage({\n              key: 'openid',\n              data: openid\n            })\n            // 参数里面的回调函数\n            typeof success === 'function' && success(res)\n          } else {\n            typeof fail === 'function' && fail()\n          }\n          // 没有返回\n          // console.log('code2', code)\n        })\n      }\n    })\n  },\n  onLoad() {\n    // console.log('todayEmotion', this.data.todayEmotion)\n    this.setData({\n      curMonth: dateFormat(new Date(), 'yyyy-MM')\n    })\n    // console.log('curMonth', dateFormat(new Date(), 'yyyy-MM')) // 当前月份   \n    // this.getUserOpenId()\n    // 另一个参数是失败时的回调函数\n    this.getScope(this.getUserInfo, () => {\n      // 如果失败还是显示要获取授权状态\n      this.setData({ auth: 0 })\n    })\n  },\n  onShow() {\n    // console.log()\n  },\n  // 返回\n  goBack() {\n    wx.navigateBack()\n  },\n  // 提交心情\n  submmitEmotion() {\n    let { openid, activeEmotion, colors } = this.data\n    addEmotion(openid, activeEmotion)\n      .then((r) => {\n        if (r._id) {\n          let styles = this.data.daysStyle || []\n          let day = new Date().getDate();\n          styles.push({\n            month: 'current',\n            day,\n            color: 'black',\n            background: colors[activeEmotion]\n          });\n          this.setData({\n            daysStyle: styles,\n            todayEmotion: activeEmotion\n          })\n          // 将今天数据更新到globalData\n          const now = new Date();\n          const year = now.getFullYear()\n          const month = now.getMonth() + 1\n          const data = globalData[`diary-${year}-${month}`] || []\n          console.log('store', data)\n          if (data.length) {\n            data.push({\n              openid,\n              emotion: activeEmotion,\n              tsModified: Date.now()\n            })\n          }\n        }\n      })\n      .catch((e) => {\n        wx.showToast({\n          title: '签到失败，请稍后再试',\n          icon: 'none',\n          duration: 3000,\n        })\n      })\n  },\n  onShareAppMessage() {\n    return {\n      title: '我发现了一个好玩的小程序，分享给你看看！',\n      path: '/pages/diary/index'\n    }\n  }\n})"]}
{"version":3,"sources":["pages/weather/index.js"],"names":["app","getApp","can","CHART_CANVAS_HEIGHT","isUpdata","Page","data","statusBarHeight","backgroundImage","backgroundColor","current","temp","weather","humidity","icon","today","tomorrow","city","width","scale","address","lat","lon","updateLocation","res","latitude","longitude","name","setData","getAddress","wx","showLoading","title","mask","fail","e","hideLoading","getWeatherData","result","statusCode","formatted_addresses","address_component","recommend","rough","province","county","district","getLocation","type","success","console","log","openLocation","showToast","duration","onLocation","authSetting","chooseLocation","goDiary","url","navigateTo","cb","then","render","catch","air","tips","observe","index","Math","floor","random","Object","keys","length","hourly","daily","lifeStyle","oneWord","_today","_tomorrow","minTemp","maxTemp","dayIcon","day","hourlyData","weeklyData","drawChart","dataCache","_setPrefetchTimer","setStorage","key","setDataFormCache","getStorage","delay","now","Date","year","getFullYear","month","getMonth","globalData","prefetchTimer","setTimeout","prefetch","openid","getStorageSync","r","height","ctx","createCanvasContext","Chart","pluginService","register","afterDatasetsDraw","t","setTextAlign","setTextBaseline","setFontSize","datasets","forEach","a","getDatasetMeta","hidden","setFillStyle","i","toString","o","tooltipPosition","fillText","x","y","onShow","onLoad","getSystemInfo","windowWidth","paddingTop","pages","getCurrentPages","currentPage","query","options","onPullDownRefresh","stopPullDownRefresh","onshareAppMessage","path"],"mappings":"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","file":"index.js","sourcesContent":["import { fixChart, getChartConfig, drawEffect } from '../../lib/utils';\nimport Chart from '../../lib/chartjs/chart'\n/*<remove trigger=\"prod\">*/\nimport { getMood, geocoder, getEmotionByOpenidAndDate } from '../../lib/api'\nimport { getWeather, getAir } from '../../lib/api-mock'\n/*</remove>*/\n/*<jdists trigger=\"prod\">\nimport {getEmotionByOpenidAndDate, getMood, geocoder, getWeather, getAir} from '../../lib/api'\n</jdists>*/\nconst app = getApp()\nlet can = false;\nconst CHART_CANVAS_HEIGHT = 272 / 2;\nlet isUpdata = false;\nPage({\n  data: {\n    statusBarHeight: 32,\n    backgroundImage: \"../../images/cloud.jpg\",\n    backgroundColor: '#62aadc',\n    current: {\n      temp: '0',\n      weather: '数据获取中',\n      humidity: '1',\n      icon: 'xiaolian'\n    },\n    today: {\n      temp: 'N/A',\n      weather: '暂无'\n    },\n    tomorrow: {\n      temp: 'N/A',\n      weather: '暂无'\n    },\n    city: '海口',\n    width: 375,\n    scale: 1,\n    address: '定位中',\n    lat: 40.056974,\n    lon: 116.307689\n  },\n  updateLocation(res) {\n    let { latitude: lat, longitude: lon, name } = res;\n    let data = {\n      lat,\n      lon\n    }\n    if (name) {\n      data.address = name;\n    }\n    this.setData(data);\n    this.getAddress(lat, lon, name)\n  },\n  getAddress(lat, lon, name) {\n    wx.showLoading({\n      title: '定位中',\n      mask: true\n    })\n    let fail = (e) => {\n      this.setData({\n        address: name || '海南大学小仙女宿舍'\n      })\n      wx.hideLoading()\n      this.getWeatherData()\n    }\n    // 获取地址， 腾讯地图逆向地址解析\n    geocoder(\n      lat,\n      lon,\n      (res) => {\n        wx.hideLoading()\n        let result = (res.data || {}).result\n        // console.log(1, res, result)\n        if (res.statusCode === 200 && result && result.address) {\n          let { address, formatted_addresses, address_component } = result\n          if (formatted_addresses && (formatted_addresses.recommend || formatted_addresses.rough)) {\n            address = formatted_addresses.recommend || formatted_addresses.rough\n          }\n          let { province, city, district: county } = address_component\n          this.setData({\n            province,\n            county,\n            city,\n            address: name || address\n          })\n          this.getWeatherData()\n        } else {\n          //失败\n          fail()\n        }\n      },\n      fail\n    )\n  },\n  getLocation() {\n    wx.getLocation({\n      type: 'gcj02',\n      success: (res) => {\n        console.log('location', res);\n        this.updateLocation(res);\n      },\n      fail: (e) => {\n        this.openLocation()\n      }\n    })\n  },\n  openLocation() {\n    wx.showToast({\n      title: '检测到您未授权使用位置权限，请先开启哦',\n      icon: 'none',\n      duration: 3000\n    })\n  },\n  //  地址授权\n  // 应该没有执行？ \n  onLocation() {\n    success: ({ authSetting }) => {\n      console.log('onlocation')\n      can = authSetting['scope.userLocation'];\n      if (can) {\n        this.chooseLocation()\n      } else {\n        this.openLocation()\n      }\n    }\n  },\n  chooseLocation() {\n    wx.chooseLocation({\n      success: (res) => {\n        let { latitude, longitude } = res\n        let { lat, lon } = this.data;\n        if (latitude == lat && lon == longitude) {\n          this.getWeatherData()\n        } else {\n          this.updateLocation(res)\n        }\n      }\n    })\n  },\n  // 跳转到签到页面\n  goDiary() {\n    try {\n      let url = `/pages/diary/index`\n      wx.navigateTo({\n        url\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  },\n  // 获取页面数据 天气数据\n  getWeatherData(cb) {\n    wx.showLoading({\n      title: '获取数据中',\n      mask: true\n    })\n    // 失败的回调\n    const fail = (e) => {\n      wx.hideLoading()\n      if (typeof cb === 'function') {\n        cb()\n      }\n      wx.showToast({\n        title: '加载失败， 请稍后重试',\n        icon: 'none',\n        duration: 3000\n      })\n    }\n    const { lat, lon, province, city, county } = this.data\n    // 先传默认的经纬度\n    // console.log('lat, lon', lat, lon)\n    getWeather(lat, lon)\n      .then((res) => {\n        // console.log('dskabd', res.result)\n        wx.hideLoading()\n        if (typeof cb === 'function') {\n          cb()\n        }\n        if (res.result) {\n          this.render(res.result);\n          // console.log('res.result:', res.result)\n        } else {\n          fail();\n        }\n      })\n      .catch(fail)\n    // 获取空气质量\n    getAir(city)\n      .then((res) => {\n        // 严谨一点\n        if (res && res.result) {\n          // console.log('air', res.result)\n          this.setData({\n            air: res.result\n          })\n        }\n      })\n      .catch((e) => { })\n    //  或群签到的心情\n    getMood(province, city, county, (res) => {\n      let result = (res.data || {}).data;\n      if (result && result.tips) {\n        let tips = result.tips.observe;\n        let index = Math.floor(Math.random() * Object.keys(tips).length);\n        tips = tips[index];\n        this.setData({ tips })\n      }\n    })\n  },\n  // 数据处理\n  render(data) {\n    // 全局定义了upData \n    isUpdata = true;\n    const { width, scale } = this.data;\n    const { hourly, daily, current, lifeStyle, oneWord = '' } = data;\n    const { backgroundColor, backgroundImage } = current;\n    const _today = daily[0],\n      _tomorrow = daily[1];\n    const today = {\n      temp: `${_today.minTemp}/${_today.maxTemp}°`,\n      icon: _today.dayIcon,\n      weather: _today.day\n    }\n    const tomorrow = {\n      temp: `${_tomorrow.minTemp}/${_tomorrow.maxTemp}°`,\n      icon: _tomorrow.dayIcon,\n      weather: _tomorrow.day\n    }\n    this.setData({\n      hourlyData: hourly,\n      weeklyData: daily,\n      current,\n      backgroundImage,\n      backgroundColor,\n      today,\n      tomorrow,\n      oneWord,\n      lifeStyle\n    })\n    //  延时画图\n    this.drawChart()\n    // 缓存数据\n    this.dataCache();\n    // 启动预取定时器\n    this._setPrefetchTimer(10e3);\n  },\n  // 当第二天的数据不存在时\n  dataCache() {\n    const { current, backgroundImage, backgroundColor, today, tomorrow, address, tips, hourlyData } = this.data;\n    wx.setStorage({\n      key: 'defaultData',\n      data: {\n        current,\n        backgroundColor,\n        backgroundImage,\n        today,\n        tomorrow,\n        address,\n        tips,\n        hourlyData\n      }\n    })\n  },\n  setDataFormCache() {\n    wx.getStorage({\n      key: 'defaultData',\n      success: ({ data }) => {\n        // 判断是否更新了\n        if (data || !isUpdata) {\n          // 存在并且没有获取数据成功，那么可以给首屏赋值上次数据\n          const { current, backgroundImage, backgroundColor, today, tomorrow, address, tips, hourlyData } = data;\n          this.setData({\n            current,\n            backgroundColor,\n            backgroundImage,\n            today,\n            tomorrow,\n            address,\n            tips,\n            hourlyData\n          })\n        }\n      }\n    })\n  },\n  //  赋值，， 默认值\n  _setPrefetchTimer(delay = 10e3) {\n    // 10s 预取\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = now.getMonth() + 1;\n    const data = app.globalData[`diary-${year}-${month}`] || [];\n    if (!data.length && isUpdata) {\n      prefetchTimer = setTimeout(() => {\n        this.prefetch()\n      }, delay)\n    }\n  },\n  prefetch() {\n    let openid = wx.getStorageSync('openid');\n    if (openid) {\n      // 存在则预取当前时间的心情\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = now.getMonth() + 1;\n      getEmotionByOpenidAndDate(openid, year, month)\n        .then((r) => {\n          const data = r.data || [];\n          app.globalData[`diary-${year}-${month}`] = data;\n          console.log('globalData', app.globalData)\n        })\n        .catch((e) => {})\n    }\n  },\n  // chart 画图\n  // 直接用不用看， 以后有涉及就临时看\n  drawChart() {\n    console.log('cahrt')\n    const { width, scale, weeklyData } = this.data;\n    let height = CHART_CANVAS_HEIGHT * scale;\n    let ctx = wx.createCanvasContext('chart');\n    fixChart(ctx, width, height)\n    // 添加温度\n    Chart.pluginService.register({\n      afterDatasetsDraw(e, t) {\n        ctx.setTextAlign('center')\n        ctx.setTextBaseline('middle')\n        ctx.setFontSize(16)\n        e.data.datasets.forEach((t, a) => {\n          let r = e.getDatasetMeta(a)\n          r.hidden ||\n            r.data.forEach((e, r) => {\n              // 昨天数据发灰\n              ctx.setFillStyle(r === 0 ? '#e0e0e0' : '#ffffff')\n              let i = t.data[r].toString() + '\\xb0'\n              let o = e.tooltipPosition()\n              0 == a ? ctx.fillText(i, o.x + 2, o.y - 8 - 10) : 1 == a && ctx.fillText(i, o.x + 2, o.y + 8 + 10)\n            })\n        })\n      }\n    })\n    return new Chart(ctx, getChartConfig(weeklyData))\n  },\n  onShow() {\n    // 提前获取， 防止网络延迟然后数据获取慢\n    this._setPrefetchTimer();\n    // console.log('globalData', app.globalData)\n  },\n  onLoad() {\n    // 获取系统信息\n    // 用于系统适配\n    wx.getSystemInfo({\n      success: (res) => {\n        let width = res.windowWidth\n        // 适配\n        let scale = width / 375\n        this.setData({\n          width,\n          scale,\n          paddingTop: res.statusBarHeight + 12\n        })\n      }\n    })\n    const pages = getCurrentPages()  // 获取当前加载页面\n    const currentPage = pages[pages.length - 1] // 获取当前页面对象\n    //  获取分享过来的地址\n    const query = currentPage.options\n    if (query && query.address && query.lat && query.lon) {\n      // setData 是异步的所以需要先获取数据在获取天气数据\n      this.setData({\n        city,\n        province,\n        county,\n        address,\n        lat,\n        lon\n      },\n        () => {\n          this.getWeatherData()\n        })\n    } else {\n      // 如果不是从分享的地方过来\n      this.setDataFormCache()\n      this.getLocation()\n    }\n  },\n  onPullDownRefresh() {\n    this.getWeatherData(() => {\n      wx.stopPullDownRefresh()\n    })\n  },\n  // 一个分享, 分享你当前地址的天气状况\n  onshareAppMessage() {\n    if (!isUpdata) {\n      return {\n        title: '我发现了一个好玩的天气小程序，分享给你看看！',\n        path: 'pages/weather/index'\n      }\n    } else {\n      const { lat, lon, address, province, city, county } = this.data\n      let url = `/pages/weather/index?lat=${lat}&lon=${lon}&address=${address}&province=${province}&city=${city}&county=${county}`\n      return {\n        title: `「${address}」现在天气情况，快打开看看吧！`,\n        path: url\n      }\n    }\n  },\n})"]}
{"version":3,"sources":["lib/chartjs/scales/scale.linearbase.js"],"names":["module","exports","Chart","helpers","noop","LinearScaleBase","Scale","extend","handleTickRangeOptions","me","opts","options","tickOpts","ticks","beginAtZero","minSign","sign","min","maxSign","max","undefined","suggestedMin","Math","suggestedMax","getTickLimit","handleDirectionalChanges","buildTicks","maxTicks","numericGeneratorOptions","stepSize","getValueOrDefault","fixedStepSize","Ticks","generators","linear","reverse","start","end","convertTicksToLabels","ticksAsNumbers","slice","zeroLineIndex","indexOf","prototype","call"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAChC,KAAIC,UAAUD,MAAMC,OAApB;AAAA,KACCC,OAAOD,QAAQC,IADhB;AAEAF,OAAMG,eAAN,GAAwBH,MAAMI,KAAN,CAAYC,MAAZ,CAAmB;AAC1CC,0BAAwB,kCAAW;AAClC,OAAIC,KAAK,IAAT;AACA,OAAIC,OAAOD,GAAGE,OAAd;AACA,OAAIC,WAAWF,KAAKG,KAApB;AACA;AACA;AACA;AACA,OAAID,SAASE,WAAb,EAA0B;AACzB,QAAIC,UAAUZ,QAAQa,IAAR,CAAaP,GAAGQ,GAAhB,CAAd;AACA,QAAIC,UAAUf,QAAQa,IAAR,CAAaP,GAAGU,GAAhB,CAAd;AACA,QAAIJ,UAAU,CAAV,IAAeG,UAAU,CAA7B,EAAgC;AAC/B;AACAT,QAAGU,GAAH,GAAS,CAAT;AACA,KAHD,MAGO,IAAIJ,UAAU,CAAV,IAAeG,UAAU,CAA7B,EAAgC;AACtC;AACAT,QAAGQ,GAAH,GAAS,CAAT;AACA;AACD;AACD,OAAIL,SAASK,GAAT,KAAiBG,SAArB,EAAgC;AAC/BX,OAAGQ,GAAH,GAASL,SAASK,GAAlB;AACA,IAFD,MAEO,IAAIL,SAASS,YAAT,KAA0BD,SAA9B,EAAyC;AAC/CX,OAAGQ,GAAH,GAASK,KAAKL,GAAL,CAASR,GAAGQ,GAAZ,EAAiBL,SAASS,YAA1B,CAAT;AACA;AACD,OAAIT,SAASO,GAAT,KAAiBC,SAArB,EAAgC;AAC/BX,OAAGU,GAAH,GAASP,SAASO,GAAlB;AACA,IAFD,MAEO,IAAIP,SAASW,YAAT,KAA0BH,SAA9B,EAAyC;AAC/CX,OAAGU,GAAH,GAASG,KAAKH,GAAL,CAASV,GAAGU,GAAZ,EAAiBP,SAASW,YAA1B,CAAT;AACA;AACD,OAAId,GAAGQ,GAAH,KAAWR,GAAGU,GAAlB,EAAuB;AACtBV,OAAGU,GAAH;AACA,QAAI,CAACP,SAASE,WAAd,EAA2B;AAC1BL,QAAGQ,GAAH;AACA;AACD;AACD,GAnCyC;AAoC1CO,gBAAcpB,IApC4B;AAqC1CqB,4BAA0BrB,IArCgB;AAsC1CsB,cAAY,sBAAW;AACtB,OAAIjB,KAAK,IAAT;AACA,OAAIC,OAAOD,GAAGE,OAAd;AACA,OAAIC,WAAWF,KAAKG,KAApB;AACA;AACA;AACA;AACA;AACA,OAAIc,WAAWlB,GAAGe,YAAH,EAAf;AACAG,cAAWL,KAAKH,GAAL,CAAS,CAAT,EAAYQ,QAAZ,CAAX;AACA,OAAIC,0BAA0B;AAC7BD,cAAUA,QADmB;AAE7BV,SAAKL,SAASK,GAFe;AAG7BE,SAAKP,SAASO,GAHe;AAI7BU,cAAU1B,QAAQ2B,iBAAR,CAA0BlB,SAASmB,aAAnC,EAAkDnB,SAASiB,QAA3D;AAJmB,IAA9B;AAMA,OAAIhB,QAAQJ,GAAGI,KAAH,GAAWX,MAAM8B,KAAN,CAAYC,UAAZ,CAAuBC,MAAvB,CAA8BN,uBAA9B,EAAuDnB,EAAvD,CAAvB;AACAA,MAAGgB,wBAAH;AACA;AACA;AACAhB,MAAGU,GAAH,GAAShB,QAAQgB,GAAR,CAAYN,KAAZ,CAAT;AACAJ,MAAGQ,GAAH,GAASd,QAAQc,GAAR,CAAYJ,KAAZ,CAAT;AACA,OAAID,SAASuB,OAAb,EAAsB;AACrBtB,UAAMsB,OAAN;AACA1B,OAAG2B,KAAH,GAAW3B,GAAGU,GAAd;AACAV,OAAG4B,GAAH,GAAS5B,GAAGQ,GAAZ;AACA,IAJD,MAIO;AACNR,OAAG2B,KAAH,GAAW3B,GAAGQ,GAAd;AACAR,OAAG4B,GAAH,GAAS5B,GAAGU,GAAZ;AACA;AACD,GApEyC;AAqE1CmB,wBAAsB,gCAAW;AAChC,OAAI7B,KAAK,IAAT;AACAA,MAAG8B,cAAH,GAAoB9B,GAAGI,KAAH,CAAS2B,KAAT,EAApB;AACA/B,MAAGgC,aAAH,GAAmBhC,GAAGI,KAAH,CAAS6B,OAAT,CAAiB,CAAjB,CAAnB;AACAxC,SAAMI,KAAN,CAAYqC,SAAZ,CAAsBL,oBAAtB,CAA2CM,IAA3C,CAAgDnC,EAAhD;AACA;AA1EyC,EAAnB,CAAxB;AA4EA,CA/ED","file":"scale.linearbase.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\t\t\tme.handleDirectionalChanges();\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n"]}
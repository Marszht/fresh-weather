{"version":3,"sources":["lib/chartjs/scales/scale.linear.js"],"names":["module","exports","Chart","helpers","defaultConfig","position","ticks","callback","Ticks","formatters","linear","LinearScale","LinearScaleBase","extend","determineDataLimits","me","opts","options","chart","data","datasets","isHorizontal","IDMatches","meta","xAxisID","id","yAxisID","min","max","stacked","valuesPerType","each","dataset","datasetIndex","getDatasetMeta","type","undefined","positiveValues","negativeValues","isDatasetVisible","rawValue","index","value","getRightValue","isNaN","hidden","relativePoints","valuesForType","values","concat","minVal","maxVal","Math","handleTickRangeOptions","getTickLimit","maxTicks","tickOpts","maxTicksLimit","ceil","width","tickFontSize","getValueOrDefault","fontSize","defaults","global","defaultFontSize","height","handleDirectionalChanges","reverse","getLabelForIndex","getPixelForValue","paddingLeft","paddingBottom","start","rightValue","pixel","innerDimension","range","end","paddingRight","left","round","paddingTop","bottom","getValueForPixel","offset","getPixelForTick","ticksAsNumbers","scaleService","registerScaleType"],"mappings":"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","file":"scale.linear.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t}\n\t};\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tif (opts.stacked) {\n\t\t\t\tvar valuesPerType = {};\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar start = me.start;\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar innerDimension;\n\t\t\tvar range = me.end - start;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\n\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel + paddingLeft);\n\t\t\t}\n\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\n\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar paddingLeft = me.paddingLeft;\n\t\t\tvar paddingBottom = me.paddingBottom;\n\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\n\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n"]}
{"version":3,"sources":["lib/chartjs/elements/element.arc.js"],"names":["module","exports","Chart","helpers","globalOpts","defaults","global","elements","arc","backgroundColor","defaultColor","borderColor","borderWidth","Arc","Element","extend","inLabelRange","mouseX","vm","_view","Math","pow","x","radius","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","y","angle","distance","startAngle","endAngle","PI","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","cos","sin","getArea","tooltipPosition","centreAngle","rangeFromCentre","draw","ctx","_chart","sA","eA","beginPath","closePath","setStrokeStyle","setLineWidth","setFillStyle","fill","setLineJoin","stroke"],"mappings":"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","file":"element.arc.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#ffffff',\n\t\tborderWidth: 2\n\t};\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\treturn {\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\tctx.closePath();\n\t\t\tctx.setStrokeStyle(vm.borderColor);\n\t\t\tctx.setLineWidth(vm.borderWidth);\n\t\t\tctx.setFillStyle(vm.backgroundColor);\n\t\t\tctx.fill();\n\t\t\tctx.setLineJoin('bevel');\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n"]}
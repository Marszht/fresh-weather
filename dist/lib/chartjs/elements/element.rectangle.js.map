{"version":3,"sources":["lib/chartjs/elements/element.rectangle.js"],"names":["module","exports","Chart","globalOpts","defaults","global","elements","rectangle","backgroundColor","defaultColor","borderWidth","borderColor","borderSkipped","isVertical","bar","_view","width","undefined","getBarBounds","vm","x1","x2","y1","y2","halfWidth","x","Math","min","y","base","max","halfHeight","height","left","top","right","bottom","Rectangle","Element","extend","draw","ctx","_chart","leftX","rightX","halfStroke","beginPath","setFillStyle","setStrokeStyle","setLineWidth","corners","borders","startCorner","indexOf","cornerAt","index","corner","moveTo","i","lineTo","fill","stroke","inRange","mouseX","mouseY","bounds","inLabelRange","me","inXRange","inYRange","getCenterPoint","getArea","abs","tooltipPosition"],"mappings":"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","file":"element.rectangle.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar globalOpts = Chart.defaults.global;\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\tfunction isVertical(bar) {\n\t\treturn bar._view.width !== undefined;\n\t}\n\t/**\n\t * Helper function to get the bounds of the bar regardless of the orientation\n\t * @private\n\t * @param bar {Chart.Element.Rectangle} the bar\n\t * @return {Bounds} bounds of the bar\n\t */\n\tfunction getBarBounds(bar) {\n\t\tvar vm = bar._view;\n\t\tvar x1, x2, y1, y2;\n\t\tif (isVertical(bar)) {\n\t\t\t// vertical\n\t\t\tvar halfWidth = vm.width / 2;\n\t\t\tx1 = vm.x - halfWidth;\n\t\t\tx2 = vm.x + halfWidth;\n\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tvar halfHeight = vm.height / 2;\n\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\ty1 = vm.y - halfHeight;\n\t\t\ty2 = vm.y + halfHeight;\n\t\t}\n\t\treturn {\n\t\t\tleft: x1,\n\t\t\ttop: y1,\n\t\t\tright: x2,\n\t\t\tbottom: y2\n\t\t};\n\t}\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar halfWidth = vm.width / 2,\n\t\t\t\tleftX = vm.x - halfWidth,\n\t\t\t\trightX = vm.x + halfWidth,\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\n\t\t\t\thalfStroke = vm.borderWidth / 2;\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\t\t\tctx.beginPath();\n\t\t\tctx.setFillStyle(vm.backgroundColor);\n\t\t\tctx.setStrokeStyle(vm.borderColor);\n\t\t\tctx.setLineWidth(vm.borderWidth);\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[leftX, vm.base],\n\t\t\t\t[leftX, top],\n\t\t\t\t[rightX, top],\n\t\t\t\t[rightX, vm.base]\n\t\t\t];\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tvar corner = cornerAt(0);\n\t\t\tctx.moveTo(corner[0], corner[1]);\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tcorner = cornerAt(i);\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t}\n\t\t\tctx.fill();\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar inRange = false;\n\t\t\tif (this._view) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\t\t\treturn inRange;\n\t\t},\n\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar inRange = false;\n\t\t\tvar bounds = getBarBounds(me);\n\t\t\tif (isVertical(me)) {\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t} else {\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\t\t\treturn inRange;\n\t\t},\n\t\tinXRange: function(mouseX) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t},\n\t\tinYRange: function(mouseY) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar x, y;\n\t\t\tif (isVertical(this)) {\n\t\t\t\tx = vm.x;\n\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t} else {\n\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\ty = vm.y;\n\t\t\t}\n\t\t\treturn {x: x, y: y};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n};\n"]}
{"version":3,"sources":["lib/chartjs/controllers/controller.doughnut.js"],"names":["module","exports","Chart","helpers","defaults","doughnut","animation","animateRotate","animateScale","aspectRatio","hover","mode","legendCallback","chart","text","push","id","data","datasets","labels","length","i","backgroundColor","join","legend","generateLabels","map","label","meta","getDatasetMeta","ds","arc","custom","getValueAtIndexOrDefault","arcOpts","options","elements","fill","stroke","borderColor","bw","borderWidth","fillStyle","strokeStyle","lineWidth","hidden","isNaN","index","onClick","e","legendItem","ilen","update","cutoutPercentage","rotation","Math","PI","circumference","tooltips","callbacks","title","tooltipItem","dataLabel","value","datasetIndex","isArray","slice","pie","clone","extend","controllers","DatasetController","dataElementType","Arc","linkScales","noop","getRingIndex","ringIndex","j","isDatasetVisible","reset","me","chartArea","opts","availableWidth","right","left","availableHeight","bottom","top","minSize","min","offset","x","y","getMeta","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","max","size","width","height","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","updateElement","animationOpts","centerX","centerY","dataset","getDataset","calculateCircumference","valueAtIndexOrDefault","_datasetIndex","_index","_model","model","removeHoverStyle","pivot","prototype","call","element","abs","hoverWidth","_chart","config","hoverBorderWidth"],"mappings":"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","file":"controller.doughnut.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t}\n\t\t\t\t\treturn dataLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\t\tdataElementType: Chart.elements.Arc,\n\t\tlinkScales: helpers.noop,\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ringIndex;\n\t\t},\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\t\t\tmeta.total = me.calculateTotal();\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\t\t\tarc.pivot();\n\t\t},\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\t\t\treturn total;\n\t\t},\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n"]}
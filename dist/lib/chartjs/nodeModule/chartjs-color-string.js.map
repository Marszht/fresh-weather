{"version":3,"sources":["lib/chartjs/nodeModule/chartjs-color-string.js"],"names":["colorNames","require","module","exports","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","keyword","string","abbr","hex","rgba","per","rgb","a","match","i","length","parseInt","slice","parseFloat","Math","round","scale","hsl","alpha","h","s","l","isNaN","hwb","w","b","hsla","vals","hexDouble","undefined","r","g","reverseNames","num","min","max","str","toString","toUpperCase","name"],"mappings":"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","file":"chartjs-color-string.js","sourcesContent":["/* MIT license */\nvar colorNames = require('./color-name');\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\n       hex =  /^#([a-fA-F0-9]{6})$/,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n       keyword = /(\\w+)/;\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n"]}
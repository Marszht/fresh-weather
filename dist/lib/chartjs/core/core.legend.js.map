{"version":3,"sources":["lib/chartjs/core/core.legend.js"],"names":["module","exports","Chart","helpers","noop","defaults","global","legend","display","displayFixed","position","fullWidth","reverse","onClick","e","legendItem","index","datasetIndex","ci","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","boxWidth","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","Legend","Element","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","legendItems","options","call","opts","ctx","globalDefault","itemOrDefault","getValueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","setFontSize","lineWidths","totalHeight","length","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","push","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","setLineWidth","setStrokeStyle","setFillStyle","drawLegendBox","x","y","isNaN","save","defaultColor","setLineCap","setLineJoin","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvasHelpers","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","getRelativePosition","lh","hitBox","plugins","register","beforeInit","chartInstance","legendOpts","layoutService","addBox"],"mappings":"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","file":"core.legend.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\tChart.defaults.global.legend = {\n\t\tdisplay: true,\n\t\tdisplayFixed:true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\t\tonHover: null,\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Helper function to get the box width based on the usePointStyle option\n\t * @param labelopts {Object} the label options on the legend\n\t * @param fontSize {Number} the label font size\n\t * @return {Number} width of the color box area\n\t */\n\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\treturn labelOpts.usePointStyle ?\n\t\t\tfontSize * Math.SQRT2 :\n\t\t\tlabelOpts.boxWidth;\n\t}\n\tChart.Legend = Chart.Element.extend({\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\t\t//\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\t\t//\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\n\t\t\tif (me.options.reverse) {\n\t\t\t\tme.legendItems.reverse();\n\t\t\t}\n\t\t},\n\t\tafterBuildLabels: noop,\n\t\t//\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\t\t\t\tctx.setFontSize(fontSize);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\t\t\t\t\tminSize.height += totalHeight;\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\t// Actually draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.setLineWidth(0.5);\n\t\t\t\tctx.setStrokeStyle(fontColor); // for strikethrough effect\n\t\t\t\tctx.setFillStyle(fontColor); // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\t\t\t\tctx.setFontSize(fontSize);\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(!opts.displayFixed){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.setFillStyle(itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor));\n\t\t\t\t\tctx.setLineCap(itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle));\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.setLineJoin(itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle));\n\t\t\t\t\tctx.setLineWidth(itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth));\n\t\t\t\t\tctx.setStrokeStyle(itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor));\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y+10);//todo 使legend向下偏移一点\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.setLineWidth(2);\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param e {Event} the event to handle\n\t\t * @return {Boolean} true if a change occured\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\tvar changed = false;\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click'||type=='touchstart') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\n\t\t\t\tx = position.x,\n\t\t\t\ty = position.y;\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click'||type=='touchstart') {\n\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\topts.onHover.call(me, e, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t}\n\t});\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar opts = chartInstance.options;\n\t\t\tvar legendOpts = opts.legend;\n\t\t\tif (legendOpts) {\n\t\t\t\tchartInstance.legend = new Chart.Legend({\n\t\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\t\toptions: legendOpts,\n\t\t\t\t\tchart: chartInstance\n\t\t\t\t});\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\n\t\t\t}\n\t\t}\n\t});\n};\n"]}
{"version":3,"sources":["lib/chartjs/core/core.scale.js"],"names":["module","exports","Chart","helpers","defaults","scale","display","position","gridLines","color","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","offsetGridLines","borderDash","borderDashOffset","scaleLabel","labelString","ticks","beginAtZero","minRotation","maxRotation","mirror","padding","reverse","autoSkip","autoSkipPadding","labelOffset","callback","Ticks","formatters","values","Scale","Element","extend","beforeUpdate","callCallback","options","update","maxWidth","maxHeight","margins","me","left","right","top","bottom","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","height","paddingLeft","paddingTop","paddingRight","paddingBottom","noop","tickOpts","map","userCallback","context","ctx","globalDefaults","global","optionTicks","tickFontSize","getValueOrDefault","fontSize","defaultFontSize","tickFontStyle","fontStyle","defaultFontStyle","tickFontFamily","fontFamily","defaultFontFamily","tickLabelFont","fontString","font","setFontSize","firstWidth","measureText","lastWidth","length","firstRotated","labelRotation","longestTextCache","originalLabelWidth","longestText","labelWidth","cosRotation","sinRotation","tickWidth","getPixelForTick","Math","cos","toRadians","sin","yLabelWidth","max","opts","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","longestLabelWidth","labelHeight","min","firstLabelWidth","measureTextXscale","lastLabelWidth","maxLabelWidth","fullWidth","getRightValue","rawValue","NaN","isFinite","Date","isValid","x","y","getLabelForIndex","getPixelForValue","getValueForPixel","index","includeOffset","innerWidth","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","draw","chartArea","box","isRotated","skipRatio","useAutoskipper","maxTicks","maxTicksLimit","tickFontColor","fontColor","defaultFontColor","tl","scaleLabelFontColor","scaleLabelFontStyle","scaleLabelFontFamily","scaleLabelFont","labelRotationRadians","longestRotatedLabel","setFillStyle","itemsToDraw","floor","xTickStart","xTickEnd","yTickStart","yTickEnd","each","label","undefined","isLastTick","shouldSkip","lineColor","zeroLineIndex","getValueAtIndexOrDefault","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","textAlign","textBaseline","xLineValue","aliasPixel","yLineValue","push","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","setLineWidth","setStrokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","isArray","i","fillText","lalg","replace","id","scaleLabelX","scaleLabelY","isLeft","PI","hideX","hideY"],"mappings":"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","file":"core.scale.js","sourcesContent":["'use strict';\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 10,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t}\n\t};\n\tChart.Scale = Chart.Element.extend({\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\t\t//\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\t\t//\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = me.options.ticks;\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tcontext.font = tickLabelFont;\n\t\t\tcontext.setFontSize(tickFontSize);\n\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\n\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\n\t\t\tvar firstRotated;\n\t\t\tme.labelRotation = optionTicks.minRotation || 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingLeft = 0;\n\t\t\tif (me.options.display) {\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\n\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\n\t\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t\t}\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\t\tvar cosRotation;\n\t\t\t\t\tvar sinRotation;\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\t\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\n\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\t\tme.labelRotation--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tme.labelRotation++;\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t}\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\t\t//\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t\tvar opts = me.options;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\t\tif (!me.longestTextCache) {\n\t\t\t\t\tme.longestTextCache = {};\n\t\t\t\t}\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFontSize * 0.5;\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickLabelFont;\n\t\t\t\t\tme.ctx.setFontSize(tickFontSize);\n\t\t\t\t\tvar firstLabelWidth = me.ctx.measureTextXscale(me.ticks[0]).width;//todo  measureTextXscale\n\t\t\t\t\tvar lastLabelWidth = me.ctx.measureTextXscale(me.ticks[me.ticks.length - 1]).width;//todo  measureTextXscale\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\n\t\t\t\t\tme.labelRotation=0;//todo 写死\n\t\t\t\t\tme.labelRotation=0;//todo 写死不旋转\n\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\n\t\t\t\t\t// Account for padding\n\t\t\t\t\tvar mirror = tickOpts.mirror;\n\t\t\t\t\tif (!mirror) {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\n\t\t\t\t\t\t// We don't need all the room\n\t\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Expand to max size\n\t\t\t\t\t\tminSize.width = me.maxWidth;\n\t\t\t\t\t}\n\t\t\t\t\tme.paddingTop = tickFontSize / 2;\n\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\treturn me.getPixelForValue(\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea,box) {//todo 传入box用于区分x轴y轴\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tvar tl = gridLines.tickMarkLength;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.setFillStyle(tickFontColor);\n\t\t\tvar itemsToDraw = [];\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (!isRotated) {\n\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\n\t\t\t\t\t}\n\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tif (options.position === 'left') {\n\t\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\n\t\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t\t}\n\t\t\t\t\t// right side\n\t\t\t\t\t} else if (optionTicks.mirror) {\n\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'right';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\n\t\t\t\t\t\ttextAlign = 'left';\n\t\t\t\t\t}\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.setLineWidth(itemToDraw.glWidth);\n\t\t\t\t\tcontext.setStrokeStyle(itemToDraw.glColor);\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickLabelFont;\n\t\t\t\t\tcontext.setFontSize(tickFontSize);\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = -(label.length - 1)*tickFontSize*0.75; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar lalg=(label+'').replace(/[^\\x00-\\xff]/g, \"**\").length\n\t\t\t\t\t\tif(box.id=='y-axis-0'||box.id=='y-axis-1'){//数值，表示左侧y轴\n\t\t\t\t\t\t\tcontext.fillText(label, -1*(lalg*5+7), 4.4);//todo 让label向左偏移一点点，会好看点\n\t\t\t\t\t\t}else if(box.id=='y-axis-2'){//右侧y轴\n\t\t\t\t\t\t\tcontext.fillText(label, 5, 4.4);//todo\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{//x轴\n\t\t\t\t\t\t\tcontext.fillText(label, -2.9*lalg, 10);//todo 让label向左偏移一点点，会好看点\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.setFillStyle(scaleLabelFontColor); // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont;\n\t\t\t\tcontext.setFontSize(scaleLabelFontSize);\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tvar lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.setLineWidth(lineWidth);\n\t\t\t\tcontext.setStrokeStyle(helpers.getValueAtIndexOrDefault(gridLines.color, 0));\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\t\t\t\tif(isHorizontal&&!gridLines.hideX){\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t\tif(!isHorizontal&&!gridLines.hideY){\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n"]}